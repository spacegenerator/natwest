####################################################################
# WARNING: These are designed specifically for Ansible tests       #
# and should not be used as examples of how to write Ansible roles #
####################################################################

# Test code for cockroachdb_info module
# Copyright: (c) 2021, Andrew Klychkov (@Andersson007) <aaklychkov@mail.ru>
# GNU General Public License v3.0+ (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)

- vars:
    conn_parameters: &conn_params
      ssl_mode: verify-full
      ssl_root_cert: '{{ ssl_root_cert }}'
      ssl_cert: '{{ ssl_cert }}'
      ssl_key: '{{ ssl_key }}'
    task_parameters: &task_params
      register: result

  block:

  - name: Create root DB
    <<: *task_params
    cockroachdb_query:
      <<: *conn_params
      query: CREATE DATABASE root

  - name: Fetch server info
    <<: *task_params
    cockroachdb_info:
      <<: *conn_params

  - name: Check
    assert:
      that:
        - result is not changed
        - result.version.raw is search('CockroachDB')
        - result.version.year >= 20
        - result.version.release > 0
        - result.version.release < 5
        - result.version.patch >= 0
        - result.databases.defaultdb.comment == none
        - result.databases.defaultdb.owner == 'root'
        - result.databases.defaultdb.primary_region == none
        - result.databases.defaultdb.regions == []
        - result.databases.defaultdb.survival_goal == none
        - result.databases.postgres.comment == none
        - result.databases.postgres.owner == 'root'
        - result.databases.postgres.primary_region == none
        - result.databases.postgres.regions == []
        - result.databases.postgres.survival_goal == none
        - result.databases.system.comment == none
        - result.databases.system.owner == 'node'
        - result.databases.system.primary_region == none
        - result.databases.system.regions == []
        - result.databases.system.survival_goal == none
        - result.settings.version.value != ""
        - result.settings.version.setting_type == "m"


  - name: Fetch server info in check_mode
    <<: *task_params
    cockroachdb_info:
      <<: *conn_params
    check_mode: yes

  - name: Check
    assert:
      that:
        - result is not changed
        - result.version.raw is search('CockroachDB')
        - result.version.year >= 20
        - result.version.release > 0
        - result.version.release < 5
        - result.version.patch >= 0
        - result.databases.defaultdb.comment == none
        - result.databases.defaultdb.owner == 'root'
        - result.databases.defaultdb.primary_region == none
        - result.databases.defaultdb.regions == []
        - result.databases.defaultdb.survival_goal == none
        - result.databases.postgres.comment == none
        - result.databases.postgres.owner == 'root'
        - result.databases.postgres.primary_region == none
        - result.databases.postgres.regions == []
        - result.databases.postgres.survival_goal == none
        - result.databases.system.comment == none
        - result.databases.system.owner == 'node'
        - result.databases.system.primary_region == none
        - result.databases.system.regions == []
        - result.databases.system.survival_goal == none
        - result.users.root.member_of == ['admin']
        - result.users.root.options == ''
        - result.users.admin.member_of == []
        - result.users.admin.options == ''
        - result.settings.version.value != ""
        - result.settings.version.setting_type == "m"

  - name: Create database
    <<: *task_params
    cockroachdb_query:
      <<: *conn_params
      query: CREATE DATABASE test

  - name: Set empty comment
    <<: *task_params
    cockroachdb_query:
      <<: *conn_params
      query: COMMENT ON DATABASE test IS 'test'

  - name: Fetch server info in check_mode
    <<: *task_params
    cockroachdb_info:
      <<: *conn_params
    check_mode: yes

  - name: Check
    assert:
      that:
        - result is not changed
        - result.version.raw is search('CockroachDB')
        - result.version.year >= 20
        - result.version.release > 0
        - result.version.release < 5
        - result.version.patch >= 0
        - result.databases.defaultdb.comment == none
        - result.databases.defaultdb.owner == 'root'
        - result.databases.defaultdb.primary_region == none
        - result.databases.defaultdb.regions == []
        - result.databases.defaultdb.survival_goal == none
        - result.databases.postgres.comment == none
        - result.databases.postgres.owner == 'root'
        - result.databases.postgres.primary_region == none
        - result.databases.postgres.regions == []
        - result.databases.postgres.survival_goal == none
        - result.databases.system.comment == none
        - result.databases.system.owner == 'node'
        - result.databases.system.primary_region == none
        - result.databases.system.regions == []
        - result.databases.system.survival_goal == none
        - result.databases.test.comment == 'test'
        - result.databases.test.owner == 'root'
        - result.databases.test.primary_region == none
        - result.databases.test.regions == []
        - result.databases.test.survival_goal == none
        - result.users.root.member_of == ['admin']
        - result.users.root.options == ''
        - result.users.admin.member_of == []
        - result.users.admin.options == ''
        - result.regions == {}
